using Jumping.Models.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using System.Xml.Serialization;
using Microsoft.Xna.Framework.Graphics;
using Jumping.Models.Core;

namespace Jumping.Models.Features
{
    [XmlRoot(ElementName="YellAttack")]
    public class YellAttack : IAttackBehavior
    {

        private Level _level;
        private Vector2 _position;
        private Texture2D _texture;
        
        private string TextureName { get; set; }
        public bool isBeingUsed { get; set; }
        private Rectangle _collisionBox;
        private int damage;
        

        public void Initialize()
        {
            TextureName = "yell";
            _texture = TextureLoader.GetInstance().GetTexture(TextureName);
            _position = Vector2.Zero;
            isBeingUsed = false;
            
        }

        public void Use(MovableObject objectType)
        {
            _position = new Vector2(objectType._Position.X + 30, objectType._Position.Y + 5);
            CollisionDetector collisionDetector = CollisionDetector.GetInstance();
            _collisionBox = new Rectangle((int)_position.X, (int) _position.Y, _texture.Width, _texture.Height);
            isBeingUsed = true;
            for (int i = 0; i < _level.GetMovableObjects().Count(); i++)
            {
                if (_level.GetMovableObjects()[i] is Enemy)
                {
                    Enemy enemy = (Enemy)_level.GetMovableObjects()[i];
                    if(collisionDetector.CheckCollision(_collisionBox, enemy.collisionBox))
                    {
                        _level.GetMovableObjects().Remove(enemy);
                        _level.Layers[1].sprites.Remove(enemy);
                    }
                }
            }
        }
        public void Update(GameTime gameTime)
        {
        }

        public void SetPlayer(Player player)
        {
        }


        public void Draw(SpriteBatch spriteBatch)
        {
            spriteBatch.Draw(_texture, _position, Color.White);
        }
        public void Use(GameTime gametime)
        {
        }
    }
}
